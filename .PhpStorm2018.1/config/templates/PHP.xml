<templateSet group="PHP">
  <template name="atoc" value="$this-&gt;mockGenerator-&gt;orphanize('__construct');" description="orphanize constructor" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="atspcc" value="$this-&gt;mockGenerator-&gt;shuntParentClassCalls();" description="shuntParentClassCalls" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="vd" value="var_dump($VARIABLE$);" description="var_dump" toReformat="true" toShortenFQNames="true">
    <variable name="VARIABLE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="pr" value="print_r($VARIABLE$);" description="print_r" toReformat="true" toShortenFQNames="true">
    <variable name="VARIABLE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="prv" value="/** @var $TYPE$ */&#10;private $VARIABLE$;" description="private variable" toReformat="true" toShortenFQNames="true">
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VARIABLE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
      <option name="PHP Comment" value="false" />
      <option name="PHP String Literal" value="false" />
    </context>
  </template>
  <template name="atif" value="-&gt;if($IF$)&#10;-&gt;then&#10;    -&gt;$THEN$" description="atoum if" toReformat="false" toShortenFQNames="true">
    <variable name="IF" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="THEN" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
      <option name="PHP Comment" value="false" />
      <option name="PHP String Literal" value="false" />
    </context>
  </template>
  <template name="atex" value="-&gt;exception(function() $USE${$MAIN$})&#10;    -&gt;isInstanceOf($INSTANCE$)&#10;    -&gt;hasMessage($MSG$)" description="atoum exception" toReformat="false" toShortenFQNames="true">
    <variable name="USE" expression="" defaultValue="use()" alwaysStopAt="true" />
    <variable name="MAIN" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="INSTANCE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="MSG" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
      <option name="PHP Comment" value="false" />
      <option name="PHP String Literal" value="false" />
    </context>
  </template>
  <template name="d" value="dump($VAR$);" description="dump" toReformat="false" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="dump" value="dump($SELECTION$);" description="dump selection" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="sprintf" value="sprintf($SELECTION$, $END$)" description="sprintf" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="atbtm" value="public function beforeTestMethod($testMethod)&#10;{&#10;    $END$&#10;}" description="atoum beforeTestMethod" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
      <option name="PHP Comment" value="false" />
      <option name="PHP String Literal" value="false" />
    </context>
  </template>
  <template name="pr_surround_live" value="print_r($SELECTION$);" description="print_r" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="pubf" value="public function $NAME$($PARAMETERS$)$RETURN_TYPE$&#10;{&#10;    $END$&#10;}" description="public function" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAMETERS" expression="phpVar" defaultValue="" alwaysStopAt="true" />
    <variable name="RETURN_TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="pubsf" value="public static function $NAME$($PARAMETERS$)$RETURN_TYPE$&#10;{&#10;    $END$&#10;}" description="public static function" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAMETERS" expression="phpVar" defaultValue="" alwaysStopAt="true" />
    <variable name="RETURN_TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="prof" value="protected function $NAME$($PARAMETERS$)$RETURN_TYPE$&#10;{&#10;    $END$&#10;}" description="protected function" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAMETERS" expression="phpVar" defaultValue="" alwaysStopAt="true" />
    <variable name="RETURN_TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="prosf" value="protected static function $NAME$($PARAMETERS$)$RETURN_TYPE$&#10;{&#10;    $END$&#10;}" description="protected static function" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAMETERS" expression="phpVar" defaultValue="" alwaysStopAt="true" />
    <variable name="RETURN_TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="prif" value="private function $NAME$($PARAMETERS$)$RETURN_TYPE$&#10;{&#10;    $END$&#10;}" description="private function" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAMETERS" expression="phpVar" defaultValue="" alwaysStopAt="true" />
    <variable name="RETURN_TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="prisf" value="private static function $NAME$($PARAMETERS$)$RETURN_TYPE$&#10;{&#10;    $END$&#10;}" description="private static function" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAMETERS" expression="phpVar" defaultValue="" alwaysStopAt="true" />
    <variable name="RETURN_TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
</templateSet>