#!/bin/bash

# http://stackoverflow.com/questions/3432536/create-session-if-none-exists/7231728#7231728
# http://stackoverflow.com/questions/5447278/bash-scripts-with-tmux-to-launch-a-4-paned-window/7720881#7720881

# -----
# |0|2|
# -----
# |1|3|
# -----

set -uo pipefail

source "${HOME}/.functions"

export SESSIONS="home dev"

source "${HOME}/.bin/tmuxExtra"

function session-home {
    tmux new-session -d -s ${1} -n 'logs' -c "${HOME}"

    tmux new-window -n "docs"           -t ${1} -c "${HOME}"
    tmux new-window -n "docs"           -t ${1} -c "${HOME}/docs"
    tmux new-window -n "dotfiles"       -t ${1} -c "${HOME}/dotfiles"
    tmux new-window -n "machine-config" -t ${1} -c "${HOME}/workspace/perso/machine-config"
    tmux new-window -n "server-config"  -t ${1} -c "${HOME}/workspace/perso/server-config"
    tmux new-window -n "blog"           -t ${1} -c "${HOME}/workspace/perso/b-galati.github.io"

    tmux split-window -h -t ${1}:0 -c "${HOME}"
    tmux split-window -h -t ${1}:6 -c "${HOME}/workspace/perso/b-galati.github.io"

    tmux send-keys -t ${1}:0.0 'dmesg -HTw'              C-m
    tmux send-keys -t ${1}:0.1 'journalctl -p 0..3 -fxn' C-m

    tmux select-window -t ${1}:0
}

function session-dev {
    tmux new-session -d -s ${1} -n 'redis-bundle' -c "${HOME}/workspace/open-source/SncRedisBundle"

    tmux split-window -h -t ${1}:0 -c "${HOME}/workspace/perso/lab/tests-snc-redis-bundle"

    tmux new-window -n "lab" -t ${1} -c "${HOME}/workspace/perso/lab"
}

# --------------------------------

# Make sure Symfony binary  is up-to-date to avoid having him wating on every pane it is used
output_heading "-------------------------------"
output_heading "Trying to update Symfony binary"
output_heading "-------------------------------"
symfony self:update || true

echo
output_heading "----------------------"
output_heading "Starting tmux sessions"
output_heading "----------------------"
echo

for session in ${SESSIONS}; do
    tmux has-session -t ${session} 2>/dev/null
    if [[ $? == 0 ]]; then
        output_warning "Session '${session}' already exists"
        continue
    fi

    session-${session} ${session}
    output_success "Session '${session}' was created"
done
