#!/bin/bash
#
# How to use:
#     archive-project ~/home/data
#

set -euo pipefail

source "${HOME}/.functions"

if [[ $# != 1 ]]; then
    output_error "Please provide 1 and only 1 argument"
    exit 1
fi

if [[ ! -d "${1}" ]]; then
    output_error "${1} is not a directory"
    exit 2
fi

archiveName="${1}.tar.gz"

read -p "It will generate archive $(pwd)/$archiveName. Are you sure? (y/n) " -n 1;
echo

if [[ ${REPLY} =~ ^[Yy]$ ]]; then
    if [[ -d "${1}/.git" ]]; then
        (
            cd "${1}"
            git fetch --all -p -v || true
            git branch --no-color | grep -v '*' | grep -v master | xargs --no-run-if-empty git branch -D
            rm -rf .git/refs/original/ .git/logs/
            git gc --aggressive --prune=now
        )
    fi

    tar -cvzf "$archiveName" \
        --exclude-vcs-ignores \
        --exclude-backups \
        --exclude=.idea/* \
        --exclude=var/cache/* \
        --exclude=var/logs/* \
        --exclude=var/mysql/* \
        --exclude=var/legacy/* \
        --exclude=vendor/* \
        --exclude=node_modules/* \
        --exclude=bower_components/* \
        --exclude=public/build/* \
        --exclude=public/built/* \
        --exclude=public/bundles/* \
        --exclude=web/build/* \
        --exclude=web/built/* \
        --exclude=web/bundles/* \
        ${1}
fi
